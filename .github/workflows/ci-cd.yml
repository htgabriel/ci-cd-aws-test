name: CI/CD

on:
  push:
    branches:
      - staging
  pull_request:
    branches:
      - staging

jobs:
  buildAndTest:
    name: CI Pipeline
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ['12.x']
    
    steps:
      - uses: actions/checkout@v2
      
      # Initialize Node.js
      - name: Install Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      
      # Install project dependencies, test and build
      - name: Install dependencies
        run: npm install
      - name: Run build
        run: npm run build
  
  deploy:
    name: CD Pipeline
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]
        node-version: ['12.x']
        appname: ['aws-codedeploy']
        deploy-group: ['staging']
        s3-bucket: ['htgabriel-aws-codedeploy-deployments']
        s3-filename: ['staging-aws-codedeploy-${{ github.sha }}']
    
    needs: buildAndTest
    steps:
      - uses: actions/checkout@v2
      
      # Initialize Node.js
      - name: Install Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      
      # Install project dependencies and build
      - name: Install dependencies
        run: npm install
      - name: Run build
        run: npm run build
      
      # Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: us-east-1
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
      
      # Deploy push to AWS S3
      - name: AWS Deploy push
        run: |
          aws deploy push \
          --application-name ${{ matrix.appname }} \
          --description "This is a revision for the ${{ matrix.appname }}-${{ github.sha }}" \
          --ignore-hidden-files \
          --s3-location s3://${{ matrix.s3-bucket }}/${{ matrix.s3-filename }}.zip \
          --source .
      # Create deployment to CodeDeploy
      - name: AWS Create Deployment
        run: |
          aws deploy create-deployment \
           --application-name ${{ matrix.appname }} \
           --deployment-config-name CodeDeployDefault.OneAtATime \
           --deployment-group-name ${{ matrix.deploy-group }} \
           --file-exists-behavior OVERWRITE \
           --s3-location bucket=${{ matrix.s3-bucket }},key=${{ matrix.s3-filename }}.zip,bundleType=zip \